package com.aston.trainee.repository;

import java.util.List;
import java.util.Optional;

/**
 * Базовый интерфейс для основных CRUD операций (создание, получение, редактирование,удаление)
 * объектов из базы данных.
 *
 * @param <T> - тип элементов, взаимодействующих с базой данных.
 */
public interface Repository<T> {
    /**
     * Метод возвращает список всех элементов, параметризованных типом <Т> из базы данных.
     *
     * @return список всех элементов типа <T>, сохраненных в базе данных.
     */
    List<T> readAll();

    /**
     * Метод возвращает объект типа Optional<T> из базы данных по указанному индексу.
     *
     * @param id - индекс получаемого объекта
     * @return объект типа Optional<T> из базы данных по указанному индексу.
     */
    Optional<T> readById(Long id);

    /**
     * Метод, сохраняет передаваемый в параметр объект в базе данных.
     *
     * @param model - объект, передаваемый для сохранения в базу данных;
     * @return созданный объект.
     */
    T create(T model);

    /**
     * Метод обновляет поля переданного элемента в базе данных.
     *
     * @param model - элемент, передающий в своих полях новое состояние объекта;
     * @return обновленный элемент.
     */
    T update(T model);

    /**
     * Метод удаляет элемент из базы данных по переданному id.
     *
     * @param id - индекс элемента для удаления.
     * @return булевое значение true при успешном удалении, false - при неудачном удалении.
     */
    Boolean deleteById(Long id);
    /**
     * Метод проверяет наличие элемента в базе данных по переданному id.
     *
     * @param id - индекс элемента для проверки.
     * @return булевое значение true, если элемент присутствует, false - при отсутствии элемента.
     */
    Boolean isExistedById(Long id);
}
