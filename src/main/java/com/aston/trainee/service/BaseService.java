package com.aston.trainee.service;

import java.util.List;

/**
 * Базовый интерфейс для основных CRUD операций (создание, получение, редактирование,удаление)
 * объектов из слоя репозитория.
 *
 * @param <R> - тип возвращаемого элемента;
 * @param <G> - тип переменной индекса;
 * @param <C> - тип переменной для создания объекта в базе данных;
 * @param <U> - тип переменной для изменения объекта в базе данных;
 */
public interface BaseService<R, G, C, U> {

    /**
     * Метод возвращает список всех элементов, параметризованных типом <R> из базы данных.
     *
     * @return список всех элементов, сохраненных в базе данных.
     */
    List<R> readAll();

    /**
     * Метод возвращает объект типа <R> из базы данных по указанному индексу.
     *
     * @param id - индекс получаемого объекта
     * @return объект типа <R> из базы данных по указанному индексу.
     */
    R readById(G id);

    /**
     * Метод, сохраняет передаваемый в параметр объект в базе данных.
     *
     * @param createRequest - объект, передаваемый для сохранения в базу данных;
     * @return созданный объект.
     */
    R create(C createRequest);

    /**
     * Метод обновляет поля переданного элемента по индексу в базе данных.
     *
     * @param id            - индекс элемента для обновления;
     * @param updateRequest - элемент, передающий в своих полях новое состояние объекта;
     * @return обновленный элемент.
     */
    R update(G id, U updateRequest);

    /**
     * Метод удаляет элемент из базы данных по переданному id.
     *
     * @param id - индекс элемента для удаления.
     * @return булевое значение true при успешном удалении, false - при неудачном удалении.
     */
    boolean deleteById(G id);
}
